Análise de Dados em R (FNDE) - Módulo 1
Sessão 5 - Gráficos
========================================================
author: Allan Vieira
date: janeiro de 2018
width: 1440
height: 900
<style>
.small-code pre code {
  font-size: 1em;
}
</style>
<!-- para trazer codigos em caixas menores: -->
<!-- https://stackoverflow.com/questions/25612385/code-box-size-and-font-size-in-rpres -->

Objetivos desta Sessão
========================================================
incremental: true
<br />
- Conhecer algumas funções básicas para gerar gráficos no R;
</br>
</br>
- Confeccionar gráficos de dispersão, linhas e barras no R.

Introdução
========================================================
incremental: true

<br />
<br />
- os gráficos do R base não são os mais bonitos, mas dão conta do recado;
<br />
<br />
- os ajustes dos elementos gráficos são feitos através dos parâmetros da função utilizada para plotagem - vale a pena ler o help() de cada função;
<br />
<br />
- há dezenas (talvez centenas) de pacotes gráficos para produzir gráficos melhores no R como vimos na aula 1 - a internet é o melhor local para conhecê-los;
<br />
<br />
- uma das funções mais importantes é a **plot()** do pacote base. Mostraremos outras, mas normalmente os parâmetros a serem controlados/modificados são os mesmos!!

Scatter plot/ gráfico de dispersão/ gráfico X-Y (1)
========================================================
incremental: false
class: small-code

```{r}
# criando dois vetores numéricos
x <- sample(seq(1,1.98, by=0.02))
y <- sample(seq(2,2.98, by=0.02))
```


```{r, fig.width=4, fig.height=4, fig.show='hold', fig.align='center'}
# plot simples
plot(x,y)
```

***

```{r, fig.width=4, fig.height=4, fig.show='hold', fig.align='center'}
# adicionando titulo
plot(x,y, main="Título")
```

```{r, fig.width=4, fig.height=4, fig.show='hold', fig.align='center'}
# adicionando subtitulo
plot(x,y, main="Título \n Subtítulo")
```

Scatter plot/ gráfico de dispersão/ gráfico X-Y (2)
========================================================
incremental: false
class: small-code

```{r, fig.width=4, fig.height=4, fig.show='hold', fig.align='center'}
# adicionando Fonte ou subescrito
plot(x,y, main="Título \n Subtítulo", sub="Fonte: EU")
```


```{r, fig.width=4, fig.height=4, fig.show='hold', fig.align='center'}
# mudando os labels dos eixos
plot(x,y, main="Título \n Subtítulo", sub="Fonte: EU", xlab = "eixo x",
     ylab = "eixo y")
```

***

```{r, fig.width=4, fig.height=4, fig.show='hold', fig.align='center'}
# modificando a cor dos pontos
plot(x,y, main="Título \n Subtítulo", sub="Fonte: EU", xlab = "eixo x",
     ylab = "eixo y", col="red")
```

```{r, fig.width=4, fig.height=4, fig.show='hold', fig.align='center'}
# aumentando o tamanho do ponto ("character or symbol expansion" - cex)
plot(x,y, main="Título \n Subtítulo", sub="Fonte: EU", xlab = "eixo x",
     ylab = "eixo y", col="red", cex= 2)
```

Scatter plot/ gráfico de dispersão/ gráfico X-Y (3)
========================================================
incremental: false
class: small-code

```{r, fig.width=4, fig.height=4, fig.show='hold', fig.align='center'}
# modificando o tipo de ponto
# pch = plotting character
plot(x,y, main="Título \n Subtítulo", sub="Fonte: EU", xlab = "eixo x",
     ylab = "eixo y", col="red", cex= 2, pch='|')
```


```{r, fig.width=4, fig.height=4, fig.show='hold', fig.align='center'}
plot(x,y, main="Título \n Subtítulo", sub="Fonte: EU", xlab = "eixo x",
     ylab = "eixo y", col="red", cex= 2, pch='.')
```

***

```{r, fig.width=4, fig.height=4, fig.show='hold', fig.align='center'}
plot(x,y, main="Título \n Subtítulo", sub="Fonte: EU", xlab = "eixo x",
     ylab = "eixo y", col="red", cex= 2, pch='p')
```

```{r, fig.width=4, fig.height=4, fig.show='hold', fig.align='center'}
plot(x,y, main="Título", sub="Fonte: EU", xlab = "eixo x", ylab = "eixo y",
     col="red", cex= 2, pch='a')
```

Scatter plot/ gráfico de dispersão/ gráfico X-Y (4)
========================================================
incremental: false
class: small-code

```{r, fig.width=4, fig.height=4, fig.show='hold', fig.align='center'}
# ainda modificando o tipo de ponto
plot(x,y, main="Título \n Subtítulo", sub="Fonte: EU", xlab = "eixo x",
     ylab = "eixo y", col="red", cex= 2, pch='5')
```


```{r, fig.width=4, fig.height=4, fig.show='hold', fig.align='center'}
# usando pch numerico - para outros símbolos
plot(x,y, main="Título \n Subtítulo", sub="Fonte: EU", xlab = "eixo x",
     ylab = "eixo y", col="red", cex= 2, pch=2)
```

***

```{r, fig.width=4, fig.height=4, fig.show='hold', fig.align='center'}
plot(x,y, main="Título \n Subtítulo", sub="Fonte: EU", xlab = "eixo x",
     ylab = "eixo y", col="red", cex= 2, pch=3)
```

```{r, fig.width=4, fig.height=4, fig.show='hold', fig.align='center'}
# para preencher os círculos: pch=16
plot(x,y, main="Título \n Subtítulo", sub="Fonte: EU", xlab = "eixo x",
     ylab = "eixo y", col="red", cex= 2, pch=16)
```


Scatter plot/ gráfico de dispersão/ gráfico X-Y (5)
========================================================
incremental: false
class: small-code

```{r, fig.width=4, fig.height=4, fig.show='hold', fig.align='center'}
# diferenciando ptos de acordo com um grupo existente
# criando fator -- vetor com variável categórica
banco <- factor(rep(c("CEF","BB"), each=25))
```

```{r, fig.width=4, fig.height=4, fig.show='hold', fig.align='center'}
# ajustamos o parametro col para apontar para o vetor tipo_estudante
plot(x,y, main="Título \n Subtítulo", sub="Fonte: EU", xlab = "eixo x",
     ylab = "eixo y",
     col=banco, cex= 2, pch=16)
```

***

```{r, fig.width=4, fig.height=4, fig.show='hold', fig.align='center'}
# vamos especificar as cores de caixa - azul e banco do brasil - amarelo
plot(x,y, main="Título \n Subtítulo", sub="Fonte: EU", xlab = "eixo x",
     ylab = "eixo y",
     col=c("blue","yellow")[banco], cex= 2, pch=16)
# o R atribui automaticamente as cores para cada fator !!
```

<!-- - É necessário que "banco" seja um fator, para que sejam atribuídos códigos numéricos a cada string e para que, portanto, este fator possa ser usado como índice de cores . Esse fator é automaticamente ordenado (em ordem alfabética no caso). Por isso, no global environment veremos 222222222....11111 , porque "BB" vem antes de CEF na ordem alfabética -->

Scatter plot/ gráfico de dispersão/ gráfico X-Y (6)
========================================================
incremental: false
class: small-code

```{r, fig.width=4, fig.height=4, fig.show='hold', fig.align='center'}
# podemos ainda acrescentar uma legenda ao gráfico com a função legend()
plot(x,y, main="Título \n Subtítulo", sub="Fonte: EU", xlab = "eixo x",
     ylab = "eixo y",
     col=c("blue","yellow")[banco], cex= 2, pch=16)
legend(x="topright", legend = levels(banco), col=c("blue","yellow"),
       pch=16)
```

***

```{r, fig.width=4, fig.height=4, fig.show='hold', fig.align='center'}
# adicionando linha ao gráfico de dispersão - média da variável y
plot(x,y, main="Título \n Subtítulo", sub="Fonte: EU", xlab = "eixo x",
     ylab = "eixo y",
     col=c("blue","yellow")[banco], cex= 2, pch=16)
abline(h = mean(y)) # h de horizontal
abline(v = mean(x)) # v de vertical
```

Scatter plot/ gráfico de dispersão/ gráfico X-Y (7)
========================================================
incremental: false
class: small-code

```{r, fig.width=8, fig.height=8, fig.show='hold', fig.align='center'}
plot(x,y, main="Título \n Subtítulo", sub="Fonte: EU", xlab = "eixo x",
     ylab = "eixo y",
     col=c("blue","yellow")[banco], cex= 2, pch=16)

# adicionando mais pontos ao gráfico:
points(c(1.2, 1.4, 1.8), c(2.2, 2.1, 2.8), col="red", cex=2)
```


Gráficos de linhas (1)
========================================================
incremental: false
class: small-code

```{r, fig.width=4, fig.height=4, fig.show='hold', fig.align='center'}
## gráficos de linhas
# note que agora só indicamos um vetor de cada vez para a função plot()!!
plot(x, main="Título \n Subtítulo", sub="Fonte: EU", xlab = "eixo x",
     ylab = "eixo y", col="red",type="l")
```

***

```{r, fig.width=5, fig.height=5, fig.show='hold', fig.align='center'}
plot(y, main="Título \n Subtítulo", sub="Fonte: EU", xlab = "eixo x",
     ylab = "eixo y", col="blue", type="l")
```


Gráficos de linhas (2)
========================================================
incremental: false
class: small-code

```{r, fig.width=8, fig.height=8, fig.show='hold', fig.align='center'}
# colocando mais de uma linha no mesmo gráfico
# antes é necessário criar o grid do gráfico com um range adequado
yrange<-range(c(x,y))
plot(x,type="l",ylim=yrange,col=2)
lines(y,type="l",col=3)
# você pode utilizar o help para alterar as características 
#...das linhas também!!
```

Gráficos de Barras (1)
========================================================
incremental: false
class: small-code

```{r, fig.width=4, fig.height=4, fig.show='hold', fig.align='center'}
## gráficos de barras - simples
barplot(x)
```

***

```{r, fig.width=4, fig.height=4, fig.show='hold', fig.align='center'}
barplot(y)
```


Gráficos de Barras (2)
========================================================
incremental: false
class: small-code

```{r}
# simulando dados
anos <- rep( rep(c("2016","2017"), times=c(17,8)), 2 )
banco <- rep(c("BB", "CEF"), c(36, 14))
df2 <- data.frame(x, y, banco, anos)
```

```{r, fig.width=7, fig.height=7, fig.show='hold', fig.align='center'}
# barras EMPILHADAS
freq <- table(df2$banco, df2$anos) # tabela de frequências
# ... mas poderiam ser médias, somas, etc...
barplot(freq, main="Distribuição de alunos por ano e banco",
        xlab="Anos", col=c("darkblue","orange"),
        legend = rownames(freq)) 
```

***

```{r, fig.width=5, fig.height=4, fig.show='hold', fig.align='center'}
# barras JUSTAPOSTAS NA VERTICAL
barplot(freq, main="Distribuição de alunos por ano e banco",
        xlab="Anos", col=c("darkblue","orange"),
        legend = rownames(freq), beside = TRUE) 
```

```{r, fig.width=4, fig.height=4, fig.show='hold', fig.align='center'}
# barras JUSTAPOSTAS NA HORIZONAL E SEM BOX
barplot(freq, main="Distribuição de alunos por ano e banco",
        xlab="Anos", col=c("darkblue","orange"),
        legend = rownames(freq), beside = TRUE, horiz = TRUE) 
```


Gráfico de Pizza
========================================================
incremental: false
class: small-code

- Basta passar um vetor de frequências:

```{r, fig.width=7, fig.height=4, fig.show='hold', fig.align='center'}
pie(c(1,5,7,10))
```

```{r, fig.width=7, fig.height=4, fig.show='hold', fig.align='center'}
pie(table(df2$banco), col = c("darkblue", "orange"))
```

***

```{r, fig.width=7, fig.height=4, fig.show='hold', fig.align='center'}
pie(table(df2$anos), col = c("darkblue", "red"))
```


FIM
========================================================
incremental: false
class: small-code

Obrigado!!